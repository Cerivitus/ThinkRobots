--Challenge: bills table is at a lower level of detail vs task 1 (bills table in task 1 aggregates total_charges YTD)
--Solution: I will aggregate bills data at an account_id level replicating the bills table from task 1 

With main as (
	Select a.segment,c.account_status,c.total_charges,(c.total_charges/b.num_cust) adj_revenue from customers a
join (
	select billing_account,count(*) num_cust
	from customers
	group by billing_account) b
on 
	a.billing_account=b.billing_account
--need to preaggregate bills table and join to accounts on account_id
join (
	Select a.id, a.status, a.upgrade_at, a.cancelled_at, b.amount
	from accounts a
	join (
		Select account_id, sum(amount) as amount from bills
		group by account_id) b
	on 
		a.id=b.account_id) c
on 
	a.account_id=c.account_id) c
on 
	a.billing_account=c.billing_account
),

total as ( 
	Select sum(adj_revenue) total_revenue from main
),

segment_cancelled as (Select segment,sum(adj_revenue) cancelled_revenue from main
where account_status = 'cancelled'
group by 1
),

combine as (
	Select * from segment_cancelled,total
)



Select segment,cancelled_revenue/total_revenue*100 as p_rev_from_cancel from combine;